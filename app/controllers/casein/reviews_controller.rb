# Scaffolding generated by Casein v5.3.0.0

module Casein
  class ReviewsController < Casein::CaseinController
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_action :needs_admin, except: [:action1, :action2]
    # before_action :needs_admin_or_current_user, only: [:action1, :action2]
  
    def index
      @casein_page_title = 'Reviews'
      @reviews = Review.order(sort_order(:user)).paginate page: params[:page]
    end

    def show
      @casein_page_title = 'View review'
      @review = Review.find params[:id]
    end

    def new
      @casein_page_title = 'Add a new review'
      @review = Review.new
    end

    def create
      @review = Review.new review_params

      if @review.save
        flash[:notice] = 'Review created'
        redirect_to casein_reviews_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new review'
        render action: :new
      end
    end

    def update
      @casein_page_title = 'Update review'

      @review = Review.find params[:id]

      if @review.update_attributes review_params
        flash[:notice] = 'Review has been updated'
        redirect_to casein_reviews_path
      else
        flash.now[:warning] = 'There were problems when trying to update this review'
        render action: :show
      end
    end

    def destroy
      @review = Review.find params[:id]

      @review.destroy
      flash[:notice] = 'Review has been deleted'
      redirect_to casein_reviews_path
    end

    private

    def review_params
      params.require(:review).permit(:user, :abstract_doc, :originality, :expand, :impact, :methods, :clarity, :comments)
    end
  end
end
